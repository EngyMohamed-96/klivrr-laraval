/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 118);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/metronic/js/pages/custom/user/add-user.js":
/*!*************************************************************!*\
  !*** ./resources/metronic/js/pages/custom/user/add-user.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // Class Definition\n\nvar KTAddUser = function () {\n  // Private Variables\n  var _wizardEl;\n\n  var _formEl;\n\n  var _wizardObj;\n\n  var _avatar;\n\n  var _top_submit;\n\n  var _block_1;\n\n  var _block_2;\n\n  var _block_3;\n\n  var _validations = []; // Private Functions\n\n  var _initWizard = function _initWizard() {\n    // Initialize form wizard\n    _wizardObj = new KTWizard(_wizardEl, {\n      startStep: 1,\n      // initial active step number\n      clickableSteps: true // allow step clicking\n\n    }); // Validation before going to next page\n\n    _wizardObj.on('change', function (wizard) {\n      if (wizard.getStep() > wizard.getNewStep()) {\n        return; // Skip if stepped back\n      } // Validate form before change wizard step\n\n\n      var validator = _validations[wizard.getStep() - 1]; // get validator for currnt step\n\n\n      if (validator) {\n        validator.validate().then(function (status) {\n          if (status == 'Valid') {\n            wizard.goTo(wizard.getNewStep());\n\n            if (wizard.isLastStep()) {\n              _top_submit.disabled = false;\n              var formData = new FormData(_formEl);\n              _block_1.innerHTML = formData.get('first_name') + ' ' + formData.get('last_name') + '<br />Phone: ' + formData.get('phone') + '<br />Email: ' + formData.get('email');\n              _block_2.innerHTML = 'Language: ' + formData.get('language') + '<br />Time Zone: ' + formData.get('timezone') + '<br />Communication Via Email: ' + formData.get('comm_email') + '<br />Communication Via Phone: ' + formData.get('comm_phone') + '<br />Role: ' + formData.get('role_id');\n              _block_3.innerHTML = formData.get('address_line1') + '<br />' + formData.get('address_line2') + '<br />' + formData.get('city') + '<br />' + formData.get('state') + '<br />' + formData.get('country');\n            } else {\n              _top_submit.disabled = true;\n            }\n\n            KTUtil.scrollTop();\n          } else {\n            Swal.fire({\n              text: \"Sorry, looks like there are some errors detected, please try again.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn font-weight-bold btn-light\"\n              }\n            }).then(function () {\n              KTUtil.scrollTop();\n            });\n          }\n        });\n      }\n\n      return false; // Do not change wizard step, further action will be handled by he validator\n    }); // Change event\n\n\n    _wizardObj.on('changed', function (wizard) {\n      KTUtil.scrollTop();\n    }); // Submit event\n\n\n    _wizardObj.on('submit', function (wizard) {\n      _top_submit.disabled = false;\n      Swal.fire({\n        text: \"All is good! Please confirm the form submission.\",\n        icon: \"success\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, submit!\",\n        cancelButtonText: \"No, cancel\",\n        customClass: {\n          confirmButton: \"btn font-weight-bold btn-primary\",\n          cancelButton: \"btn font-weight-bold btn-default\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          _formEl.submit(); // Submit form\n\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Your form has not been submitted!.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn font-weight-bold btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  };\n\n  var _initValidations = function _initValidations() {\n    // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n    // Validation Rules For Step 1\n    _validations.push(FormValidation.formValidation(_formEl, {\n      fields: {\n        first_name: {\n          validators: {\n            notEmpty: {\n              message: 'First Name is required'\n            }\n          }\n        },\n        last_name: {\n          validators: {\n            notEmpty: {\n              message: 'Last Name is required'\n            }\n          }\n        },\n        company: {\n          validators: {\n            notEmpty: {\n              message: 'Company Name is required'\n            }\n          }\n        },\n        phone: {\n          validators: {\n            notEmpty: {\n              message: 'Phone is required'\n            },\n            phone: {\n              country: 'US',\n              message: 'The value is not a valid phone number. (e.g 5554443333)'\n            }\n          }\n        },\n        email: {\n          validators: {\n            notEmpty: {\n              message: 'Email is required'\n            },\n            emailAddress: {\n              message: 'The value is not a valid email address'\n            }\n          }\n        },\n        password: {\n          validators: {\n            notEmpty: {\n              message: 'Password is required'\n            },\n            password: {\n              message: 'The value is not a valid password'\n            }\n          }\n        },\n        website: {\n          validators: {\n            notEmpty: {\n              message: 'Website URL is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap({\n          //eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }));\n\n    _validations.push(FormValidation.formValidation(_formEl, {\n      fields: {\n        // Step 2\n        comm_method: {\n          validators: {\n            choice: {\n              min: 1,\n              message: 'Please select at least 1 option'\n            }\n          }\n        },\n        language: {\n          validators: {\n            notEmpty: {\n              message: 'Please select a language'\n            }\n          }\n        },\n        timezone: {\n          validators: {\n            notEmpty: {\n              message: 'Please select a timezone'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap({\n          //eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }));\n\n    _validations.push(FormValidation.formValidation(_formEl, {\n      fields: {\n        address_line1: {\n          validators: {\n            notEmpty: {\n              message: 'Address is required'\n            }\n          }\n        },\n        post_code: {\n          validators: {\n            notEmpty: {\n              message: 'Postcode is required'\n            }\n          }\n        },\n        city: {\n          validators: {\n            notEmpty: {\n              message: 'City is required'\n            }\n          }\n        },\n        state: {\n          validators: {\n            notEmpty: {\n              message: 'state is required'\n            }\n          }\n        },\n        country: {\n          validators: {\n            notEmpty: {\n              message: 'Country is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap({\n          //eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    }));\n  };\n\n  var _initAvatar = function _initAvatar() {\n    _avatar = new KTImageInput('kt_user_add_avatar');\n  };\n\n  return {\n    // public functions\n    init: function init() {\n      _wizardEl = KTUtil.getById('kt_wizard');\n      _formEl = KTUtil.getById('kt_form');\n      _top_submit = KTUtil.getById('top_submit');\n      _block_1 = KTUtil.getById('block_1');\n      _block_2 = KTUtil.getById('block_2');\n      _block_3 = KTUtil.getById('block_3');\n\n      _initWizard();\n\n      _initValidations();\n\n      _initAvatar();\n\n      _top_submit.disabled = true;\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTAddUser.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/custom/user/add-user.js\n");

/***/ }),

/***/ 118:
/*!*******************************************************************!*\
  !*** multi ./resources/metronic/js/pages/custom/user/add-user.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! E:\Work\klivvr_website\resources\metronic\js\pages\custom\user\add-user.js */"./resources/metronic/js/pages/custom/user/add-user.js");


/***/ })

/******/ });